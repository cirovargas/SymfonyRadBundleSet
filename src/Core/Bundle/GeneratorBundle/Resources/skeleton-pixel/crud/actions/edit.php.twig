
    /**
{% block phpdoc_method_header %}
     * Displays a form to edit an existing {{ entity }} entity.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/{id}/edit", name="{{ route_name_prefix }}_edit")
     * @Method({"GET", "POST"})
{% endif %}
     * @Security("is_granted('ROLE_ADMIN_{{ entity_class|upper }}_EDIT') ")
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function editAction(Request $request, {{ entity_class }} ${{ entity_singularized }})
{% endblock method_definition %}
    {
{% block method_body %}
        ${{ entity_class }}Manager = $this->get('app.{{ route_name_prefix }}.manager_service');
        $deleteForm = $this->createDeleteForm(${{ entity_singularized }});
        $editForm = $this->createForm({{ entity_class }}Type::class, ${{ entity_singularized }});
        $editForm->handleRequest($request);

        if ($editForm->isSubmitted() && $editForm->isValid()) {
            try {
                ${{ entity_class }}Manager->validate(${{ entity_singularized }});
                $em = $this->getDoctrine()->getManager();

                $em->persist(${{ entity_singularized }});
                $em->flush();
                $this->get('session')->getFlashBag()->add('success', 
                    $this->get('translator')->trans('flash.update.success',array(),'CoreAdminBundle')
                );
                
            } catch(\Exception $e){
                $this->get('session')->getFlashBag()->add('danger', 
                    $this->get('translator')->trans('flash.update.error',array(),'CoreAdminBundle')
                );
                if($this->getUser()->hasRole('ROLE_SUPERADMIN')){
                    $this->get('session')->getFlashBag()->add('danger', 
                        $e->getMessage()
                    );
                }
            }

            return $this->redirectToRoute('{{ route_name_prefix }}_edit', array('id' => ${{ entity_singularized }}->getId()));
        }
{% endblock method_body %}

{% block method_return %}
        return $this->render('{{ entity|lower|replace({'\\': '/'}) }}/edit.html.twig', array(
            '{{ entity_singularized }}' => ${{ entity_singularized }},
            'edit_form' => $editForm->createView(),
            'delete_form' => $deleteForm->createView(),
        ));
{% endblock method_return %}
    }
