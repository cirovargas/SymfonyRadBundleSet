
    /**
{% block phpdoc_method_header %}
     * Deletes a {{ entity }} entity.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/{id}", name="{{ route_name_prefix }}_delete")
     * @Method("DELETE")
{% endif %}
     * @Security("is_granted('ROLE_ADMIN_{{ entity_class|upper }}_DELETE')")
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function deleteAction(Request $request, {{ entity_class }} ${{ entity_singularized }})
{% endblock method_definition %}
    {
{% block method_body %}
        $form = $this->createDeleteForm(${{ entity_singularized }});
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            try {
                $em = $this->getDoctrine()->getManager();
                $em->remove(${{ entity_singularized }});
                $em->flush();
                $this->get('session')->getFlashBag()->add('success', 
                    $this->get('translator')->trans('flash.delete.success',array(),'CoreAdminBundle')
                );
                
            } catch (\Exception $e){
                $this->get('session')->getFlashBag()->add('danger', 
                    $this->get('translator')->trans('flash.delete.error',array(),'CoreAdminBundle')
                );
                if($this->getUser()->hasRole('ROLE_SUPERADMIN')){
                    $this->get('session')->getFlashBag()->add('danger', 
                        $e->getMessage()
                    );
                }
            }
        }
{% endblock method_body %}

{% block method_return %}
        return $this->redirectToRoute('{{ route_name_prefix }}_index');
{% endblock method_return %}
    }

{% block form %}
    /**
     * Creates a form to delete a {{ entity }} entity.
     *
     * @param {{ entity_class }} ${{ entity_singularized }} The {{ entity }} entity
     *
     * @return \Symfony\Component\Form\Form The form
     */
    private function createDeleteForm({{ entity_class }} ${{ entity_singularized }})
    {
        return $this->createFormBuilder()
            ->setAction($this->generateUrl('{{ route_name_prefix }}_delete', array('id' => ${{ entity_singularized }}->getId())))
            ->setMethod('DELETE')
            ->getForm()
        ;
    }
{% endblock form %}
