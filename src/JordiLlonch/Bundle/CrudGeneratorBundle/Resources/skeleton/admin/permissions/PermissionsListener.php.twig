<?php

namespace {{ namespace }}\EventListener{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

use Core\UserBundle\Event\ConfigurePermissionsEvent;
use Symfony\Component\EventDispatcher\EventSubscriberInterface;


class {{ form_class }} implements EventSubscriberInterface
{
    public function addModulePermissions(ConfigurePermissionsEvent $event)
    {
        $event->addRootNode('{{ entity_class }}',array(
            'label' => 'Access {{ entity_class }}',
            'role' => 'ROLE_ADMIN_{{ entity_class|upper }}',
            'children' => array(
                {% if needWriteActions == true %}
                array(
                    'label' => 'Add {{ entity_class }}',
                    'role' => 'ROLE_ADMIN_{{ entity_class|upper }}_NEW'
                ),
                array(
                    'label' => 'Update {{ entity_class }}',
                    'role' => 'ROLE_ADMIN_{{ entity_class|upper }}_EDIT'
                ),
                array(
                    'label' => 'Delete {{ entity_class }}',
                    'role' => 'ROLE_ADMIN_{{ entity_class|upper }}_DELETE'
                ),
                {% endif %}
                array(
                    'label' => 'Show {{ entity_class }}',
                    'role' => 'ROLE_ADMIN_{{ entity_class|upper }}_SHOW'
                )
            )
        ));
    }
    
    public static function getSubscribedEvents() {
        return array(
            'core_user.permissions.tree'     => array('addModulePermissions', 0),
        );
    }
}